1.2.2 (December XXX, 2020)
 - Updated how splits evaluations are handled on SDK_READY, SDK_READY_FROM_CACHE, and SDK_UPDATE events, to dispatch a single action with evaluations that results in all treatments updates in the state at once, instead of having multiple actions that might lead to multiple store subscriber notifications.
 - Updated some NPM dependencies for vulnerability fixes.

1.2.1 (Oct 7, 2020)
 - Updated @splitsoftware/splitio dependency to version 10.15.0, which uses the optimized impressions sending and supports filtering the splits to be synced. Learn more in our javascript-client changelog or documentation.

1.2.0 (Jul 7, 2020)
 - Updated @splitsoftware/splitio dependency to version 10.13.0, which uses streaming synchronization by default, amongst other updates. Learn more in our javascript-client changelog or documentation.
 - Added a new status property to split's piece of state: `isReadyFromCache`, to indicate that the SDK is ready to evaluate when using LocalStorage cached data in browser.
 - Added an optional callback parameter to `initSplitSdk` action creator: `onReadyFromCache`, to listen when the SDK is ready to evaluate using LocalStorage cached data.
 - Added an optional callback parameter to `destroySplitSdk` action creator: `onDestroy`, to listen when the SDK has gracefully shut down.

1.1.0 (May 11, 2020)
 - Bugfixing - incorrect evaluation of splits on browser when using `getTreatments` with a different user key than the default, caused by not waiting the fetch of segments.
 - Added `destroySplitSdk` action creator to gracefully shutdown the SDK.
 - Added two new status properties to split's piece of state: `hasTimedout` and `isDestroyed` to better reflect the current state of the associated factory.

1.0.1 (April 6, 2020)
 - Updated dependencies to fix vulnerabilities
 - Bugfixing - support numbers as user keys

1.0.0 (January 24, 2020)
 - Initial public release!
